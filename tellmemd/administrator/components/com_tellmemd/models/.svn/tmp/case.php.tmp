<?php

/* * *****************************************************************************
 * Developer        :   Mohamed Rafi
 * Developer Email  :   rafi@archmage.lk, rafiitfac@gmail.com
 * Copyright        :   Archmage Software.
 * Licence          :   GNU/GPL
 * Prduct           :   TellMeMD - Medical Question and Answer System
 * Date             :   04 October 2011
 * ***************************************************************************** */


//give no direct access
defined( '_JEXEC' ) or die( 'Restricted access' );

//import joomla model class library
jimport('joomla.application.component.model');
jimport('joomla.mail.helper');
jimport('joomla.html.pagination');

class TellMeMdModelCase extends JModel
{
    var $_pagination = null;
    var $_data = null;
    var $_app = null;
    
    function __construct() 
    {
        $this->_app =& JFactory::getApplication();
        parent::__construct();
    }
    
    function pagination()
    {
        if($this->_pagination == NULL)
            $this->_pagination = new JPagination (0, 0, 0);
        return $this->_pagination;
    }
    
    function priceCalculation()
    {
        //get all vars
        $answer_medium = JRequest::getInt('answer_medium');
        $urgency_level = JRequest::getInt('urgency_level');
        $detail_level = JRequest::getInt('detail_level');
        $case_type = JRequest::getInt('case_type');
        $case_num = JRequest::getVar('case_num', '');
        
        //if this is question and answer type then, we call for the word counting
        if($case_type == CASE_TYPE_QUEANS)
            $que_content = $this->getQueData ($case_num);
        if($case_type == CASE_TYPE_LABTEST)
            $lab_content = $this->getLabData ($case_num);
        
        if($que_content)
            $total_words = strlen($que_content->que_subject) + strlen($que_content->que_content);
        
        //get the setting data
        $settings = $this->getPatientSettings();
        
        //setup the price for labtest type
        if($lab_content)
        {
            if($lab_content->complex_id == PRIORITY_TYPE_LOW)
                $labtest_price = $settings->simple_labtest_price;
            if($lab_content->complex_id == PRIORITY_TYPE_MEDIUM)
                $labtest_price = $settings->mod_labtest_price;
            if($lab_content->complex_id == PRIORITY_TYPE_HIGH)
                $labtest_price = $settings->complex_labtest_price;
        }
        
        //setup factors for calculation
        $urgency_percentage = $settings->priceinc_urglow;
        $detail_percentage = $settings->priceinc_level_low;
        $medium_percentage = $settings->priceinc_medium_submit;
        $word_devider = $settings->words_divide;
        
        //setup urgency percentage
        if($urgency_level == PRIORITY_TYPE_MEDIUM)
            $urgency_percentage = $settings->priceinc_urgmedium;
        elseif($urgency_level == PRIORITY_TYPE_HIGH)
            $urgency_percentage = $settings->priceinc_urghigh;
        
        //setup level of detail percentage
        if($detail_level == PRIORITY_TYPE_MEDIUM)
            $detail_percentage = $settings->priceinc_level_medium;
        if($detail_level == PRIORITY_TYPE_HIGH)
            $detail_percentage = $settings->priceinc_level_high;
        
        //setup medium percentage
        if($answer_medium == MEDIUM_TYPE_LIVE_CHAT)
            $medium_percentage = $settings->priceinc_medium_chat;
        if($answer_medium == MEDIUM_TYPE_SKYPE)
            $medium_percentage = $settings->priceinc_medium_skype;
        
        $base_price = '';
        if($case_type == CASE_TYPE_QUEANS)
            $base_price = $total_words / $word_devider;
        if($case_type == CASE_TYPE_LABTEST)
            $base_price = $labtest_price;
        $base_price = round($base_price + (($base_price * $urgency_percentage)/100) + (($base_price * $detail_percentage)/100) + (($base_price * $medium_percentage)/100));
        
        return $base_price;
    }
    
    function getQueData($case_num)
    {
        if($case_num == '')
            return FALSE;
        
        $query = "Select que_subject, que_content From ".TABLE_PREFIX."questions Where case_num = '$case_num' And processed = 0 ";
        $this->_db->setQuery($query);
        $contents = $this->_db->loadObject();
        
        if ($this->_db->getErrorNum())
        {
            $this->_app->enqueueMessage($this->_db->stderr(), 'error');
            return FALSE;
        }
        
        return $contents;
    }
    
    function getLabData($case_num)
    {
        if($case_num == '')
            return FALSE;
        
        $query = "Select labtest.complex_id From ".TABLE_PREFIX."labcase As lbcase, ".TABLE_PREFIX."labtest As labtest Where 
                    lbcase.case_num = '$case_num' And processed = 0 And lbcase.lab_id = labtest.id ";
        $this->_db->setQuery($query);
        $contents = $this->_db->loadObject();
        
        if ($this->_db->getErrorNum())
        {
            $this->_app->enqueueMessage($this->_db->stderr(), 'error');
            return FALSE;
        }
        
        return $contents;
    }
    
    function getPatientSettings()
    {
        $query = "Select * From ".TABLE_PREFIX."patient_settings ";
        $this->_db->setQuery($query);
        $settings = $this->_db->loadObject();
        
        if ($this->_db->getErrorNum())
        {
            $this->_app->enqueueMessage($this->_db->stderr(), 'error');
            return FALSE;
        }
        
        return $settings;
    }
    
    function validatePrice()
    {
        $this->_data->price_amount = JRequest::getFloat('price_amount');
        $this->_data->calc_price = $this->priceCalculation();
        $this->_data->answer_medium = JRequest::getInt('answer_medium');
        $this->_data->urgency_level = JRequest::getInt('urgency_level');
        $this->_data->detail_level = JRequest::getInt('detail_level');
        $this->_data->case_type = JRequest::getInt('case_type');
        $this->_data->case_num = JRequest::getVar('case_num', '');
        
        if(!$this->_data->price_amount)
            return FALSE;
        
        if(!$this->_data->calc_price)
            return FALSE;
        
        $this->_data->max_price = round($this->_data->calc_price + (($this->_data->calc_price * 20)/100));
        $this->_data->min_price = round($this->_data->calc_price - (($this->_data->calc_price * 20)/100));
        
        //validate it
        if($this->_data->price_amount < $this->_data->min_price)
        {
            $this->_app->enqueueMessage('You have to enter a price between $'.$min_price.' to $'.$max_price, 'error');
            return FALSE;
        }
        
        return TRUE;
    }
    
    function createPaypalHtml()
    {
        $this->_data->paypal_url = 'https://www.sandbox.paypal.com/cgi-bin/webscr/';
        $this->_data->invoice = uniqid('IN');
        $return_url = COMPONENT_FRONT_LINK.'?controller=payment&task=ppreturn';
        $cancel_url = htmlentities(COMPONENT_FRONT_LINK.'?controller=payment&task=ppcancel');
        
        $hidden_html = '';
        $hidden_html .= '<input type="hidden" name="cmd" value="_xclick" />';
        $hidden_html .= '<input type="hidden" name="charset" value="utf-8" />';
        $hidden_html .= '<input type="hidden" name="business" value="rafi_1317808217_biz@archmage.lk" />';
        $hidden_html .= '<input type="hidden" name="item_name" value="Testing-'.$this->_data->case_num.'" />';
        $hidden_html .= '<input type="hidden" name="item_number" value="'.$this->_data->case_num.'" />';
        $hidden_html .= '<input type="hidden" name="invoice" value="'.$this->_data->invoice.'" />';
        $hidden_html .= '<input type="hidden" name="amount" value="'.$this->_data->price_amount.'" />';
        $hidden_html .= '<input type="hidden" name="tax" value="0" />';
        $hidden_html .= '<input type="hidden" name="no_shipping" value="1" />';
        $hidden_html .= '<input type="hidden" name="no_note" value="1" />';
        $hidden_html .= '<input type="hidden" name="return" value="'.$return_url.'" />';
        $hidden_html .= '<input type="hidden" name="cancel_return" value="'.$cancel_url.'" />';
        $hidden_html .= '<input type="hidden" name="rm" value="2" />';
        $hidden_html .= '<input type="hidden" name="lc" value="EN" />';
        $hidden_html .= '<input type="hidden" name="currency_code" value="USD" />';
        
        return $hidden_html;
    }
    
    //record the payment information
    function storePaymentData()
    {
        //first we check weather payment id is available
        $payment_id = JRequest::getInt('payment_id');
        $this->_data->id = $payment_id;
        $this->_data->updated_time = date('Y-m-d H:i:s');
        
        $row =& $this->getTable('payment');
        
        if(!$row->bind($this->_data))
        {
            $this->_app->enqueueMessage($row->getError(), 'error');
            return FALSE;
        }
        
        if(!$row->store())
        {
            $this->_app->enqueueMessage($this->_db->stderr(), 'error');
            return false;
        }
        
        $new_id = $this->_db->insertId();
        
        if($new_id > 0)
            $this->_data->payment_id = $new_id;
        
        return TRUE;
    }
    
    function getCaseByUserID($type = '')
    {
        $user =& JFactory::getUser();
        
        $limit = $this->_app->getUserStateFromRequest('global.list.limit', 'limit', $this->_app->getCfg('list_limit'), 'int');
	$limitstart = $this->_app->getUserStateFromRequest(OPTIOIN_NAME.'.limitstart', 'limitstart', 0, 'int');
	$limitstart = ($limit != 0 ? (floor($limitstart / $limit) * $limit) : 0); // In case limit has been changed
        
        //build the query
        $query_count = "Select count(*) " ;
        $query_cols = "Select cases.*, cats.cat_name ";
        $query_from = "From ".TABLE_PREFIX."cases As cases, ".TABLE_PREFIX."category As cats ";
        $query_where = "Where cases.patient_id = ".$user->id." ";
        
        if($type == 'pool')
            $query_where = "Where cases.status = ".CASE_STATUS_OPEN." ";
        
        if($type == 'doc')
            $query_where = "Where cases.doctor_id = ".$user->id." ";
        
        $query_where .= "And cases.cat_id = cats.id ";
        $query_order = '';
        
        $count_query = $query_count.$query_from.$query_where;
        $this->_db->setQuery($count_query);
	$total = $this->_db->loadResult();
        
        if ($this->_db->getErrorNum())
        {
            $this->_app->enqueueMessage($this->_db->stderr(), 'error');
            return FALSE;
        }
        
        //setup the pagination
        $this->_pagination = new JPagination($total, $limitstart, $limit);
        
        $query = $query_cols.$query_from.$query_where.$query_order;
        
        //get the data within limits
        $this->_data = $this->_getList($query, $limitstart, $limit);
        
        if ($this->_db->getErrorNum())
        {
            $this->_app->enqueueMessage($this->_db->stderr(), 'error');
            return FALSE;
        }
        
        return $this->_data;
    }
}